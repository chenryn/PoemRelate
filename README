NAME
       PoemRelate - A web demo to recommand relate poems when the page show a metrical poetry.

PRINCIPLE
       Store the poems in the mysql database, and store the vector of poemsâ€™ relation in the redis database.  So, We run the
       offline script to spider poems from www, insert into mysql, compute and refresh relate vectors in redis.  And we access the
       web site to get poem content from mysql and recommand another poem based on vector.  The algorithm I used to determine the
       vector of two poems is:

        Segment the poem and store a set in redis;
        Traveral the database and get the intersection between the keyword set of the just poem and every stored poem's set;
        Get the number of every set intersection;
        Sort the number list and store the top ten in redis;
        Provide a random element to web model when we request the page which show one poem.

TODO
       1 A template to show poem in the main frame and ajax the recommandation in the side frame.
       2 A spider/writer to insert thousands of hundreds of poems into databases.
       3 A mapreducer to sinter the keywords of poems after the new one being segmented.

DEPEND
       Dancer, Redis, DBD::mysql, Template, Lingua::ZH::WordSegmenter, YAML

INSTALL
       1 Install the database server like mysql and redis.
         "yum install -y mysql-server mysql-devel redis-server"

       2 Install the denpendencies for dancer framework and simplified chinese words segment.
         "cpanm Dancer Template DBI DBD::mysql Redis YAML Lingua::ZH::WordSegmenter Dancer::Plugin::Database
         Dancer::Plugin::Redis"

       3 Run the standlone web server or any other you like.
         "perl PoemRelate/bin/app.pl"

AUTHOR
       "(rao.chenlin@gmail.com) Jeff.Rao @ARGV" <http://chenlinux.com/>

COPYRIGHT
       Copyright (c) 2012, Jeff.Rao. All rights reserved.  This program is free software; you may redistribute it and/or modify it
       under the same terms as Perl itself.
